name: Create Release Package

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v0.1.0)

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install checksumdir

      - name: Read version
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Update version in files
        run: |
          # Update shell scripts
          sed -i "s/Version: [0-9]\+\.[0-9]\+\.[0-9]\+/Version: ${{ steps.version.outputs.version }}/g" scripts/*.sh
          
          # Update PowerShell scripts
          sed -i "s/\$SCRIPT_VERSION = \"[0-9]\+\.[0-9]\+\.[0-9]\+\"/\$SCRIPT_VERSION = \"${{ steps.version.outputs.version }}\"/g" scripts/*.ps1
          
          # Update README.md if it contains version information
          sed -i "s/Version: [0-9]\+\.[0-9]\+\.[0-9]\+/Version: ${{ steps.version.outputs.version }}/g" README.md

      - name: Create package directory
        run: |
          mkdir -p universal-installer
          cp -r scripts universal-installer/
          cp README.md universal-installer/
          cp LICENSE universal-installer/
          cp version.txt universal-installer/

      - name: Create zip file
        run: |
          zip -r universal-installer.zip universal-installer/

      - name: Generate checksum
        run: |
          sha256sum universal-installer.zip > universal-installer.zip.sha256

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.tag }}
          name: Universal Installer ${{ steps.version.outputs.version }}
          body: |
            # Universal Installer ${{ steps.version.outputs.version }}

            ## Changes
            - Initial release

            ## Package Contents
            - Installation and uninstallation scripts
            - Package manager detection scripts
            - Documentation and license files

            ## Verification
            SHA-256 checksum: `$(cat universal-installer.zip.sha256)`
          artifacts: |
            universal-installer.zip
            universal-installer.zip.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          allowUpdates: true 